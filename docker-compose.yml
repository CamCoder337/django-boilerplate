version: '3.8'

services:
  # Django web application
  web:
    build:
      context: .
      target: development  # Use development stage for local development
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-for-development
      - DATABASE_URL=postgresql://postgres:password@db:5432/django_boilerplate
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/home/app:delegated
      - django_media:/home/app/media
      - django_static:/home/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    stdin_open: true
    tty: true

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=django_boilerplate
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Celery worker for background tasks
  celery:
    build:
      context: .
      target: development
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-for-development
      - DATABASE_URL=postgresql://postgres:password@db:5432/django_boilerplate
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/home/app:delegated
      - django_media:/home/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: celery -A core worker -l info

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: .
      target: development
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-for-development
      - DATABASE_URL=postgresql://postgres:password@db:5432/django_boilerplate
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/home/app:delegated
      - django_media:/home/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: celery -A core beat -l info

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - django_static:/var/www/static:ro
      - django_media:/var/www/media:ro
    depends_on:
      - web
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  django_media:
  django_static:

networks:
  default:
    name: django_boilerplate_network